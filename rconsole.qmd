---
title: "WebR Console"
---

### WebR R Console to Play with the Code

Please install any needed dependency with call like `webr::install("dplyr")`.  
The available R packages can be get with the `rownames(available.packages(repos = "https://repo.r-wasm.org/"))` call.  

```{=html}
<div style="border: solid #333 1px; padding: 5px; width: 1008px;">
  <pre id="loading"><code>Loading webR, please wait...</code></pre>
  <pre id="container" style="max-height: 600px"><code id="out"></code></pre>
  <div class="input-group mb-3">
    <span class="input-group-text" id="prompt"></span>
    <input spellcheck="false" autocomplete="off" id="input" type="text" style="width:500px;height:50px;">
    <button type="button" class="btn btn-secondary" onclick="globalThis.sendInput()" id="run">Run</button>
  </div>
</div>
<div id="container" style="border: solid #333 1px; padding: 5px; width: 1008px;">
  <button type="button" class="collapsible-item">(Click) to Show Last Plot</button>
  <div class="content-item">
    <canvas id="myCanvas" width="1008px" height="1008px"></canvas>
  </div>
</div>

<script type="module">
  import { Console } from 'https://webr.r-wasm.org/v0.1.1/webr.mjs';
  const webRConsole = new Console({
    stdout: line => {
      document.getElementById('out').append(line + '\n');
    },
    stderr: line => document.getElementById('out').append(line + '\n'),
    prompt: p => {
      const pre = document.getElementById('container');
      pre.scrollTop = pre.scrollHeight; 
      document.getElementById('prompt').innerText = p;
    },
    canvasExec: line => {
    console.log(line);
      var canvas = document.getElementById("myCanvas");
      console.log(`canvas.getContext('2d').${line}`);
      eval(`canvas.getContext('2d').${line}`);
    }
  }, {channelType: 0, REnv: {
        R_HOME: '/usr/lib/R',
        R_ENABLE_JIT: '0',
        R_DEFAULT_DEVICE: 'canvas',
      }});
  
  webRConsole.run();
  
  webRConsole.webR.init()
  .then(() => document.getElementById('loading').remove())
  .then(() => {
    document.getElementById('out').append("> " + "# Available to install R packages \n");
    let rcode_str = "rownames(available.packages(repos = 'https://repo.r-wasm.org/'))\n";
    document.getElementById('out').append("> " + rcode_str);
    webRConsole.stdin(rcode_str);
  });

  let input = document.getElementById('input');
  globalThis.sendInput = () => {
    webRConsole.stdin(input.value);
    document.getElementById('out').append(
      document.getElementById('prompt').innerText + ' ' + input.value + '\n'
    );
    input.value = "";
  }
  input.addEventListener(
    "keydown",
    (evt) => {if(evt.keyCode === 13) globalThis.sendInput()}
  );
</script>

<script>
  var coll = document.getElementsByClassName("collapsible-item");
  var i;

  for (i = 0; i < coll.length; i++) {
    coll[i].addEventListener("click", function() {
      this.classList.toggle("active-item");
      var content = this.nextElementSibling;
      if (content.style.display === "block") {
        content.style.display = "none";
      } else {
        content.style.display = "block";
      }
    });
  }
</script>
```